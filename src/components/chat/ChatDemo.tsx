import { useState } from 'react';
import { MessageCircle, TrendingUp, PiggyBank, CreditCard, Target, Calculator, Shield, Home, Car, GraduationCap, Heart, Plane } from 'lucide-react';

const sampleQuestions = [
  {
    icon: <Calculator className="w-5 h-5" />,
    text: "ржЖржорж┐ ржХрзАржнрж╛ржмрзЗ ржмрж╛ржЬрзЗржЯ рждрзИрж░рж┐ ржХрж░ржм?",
    category: "ржмрж╛ржЬрзЗржЯрж┐ржВ"
  },
  {
    icon: <PiggyBank className="w-5 h-5" />,
    text: "ржЬрж░рзБрж░рж┐ ржЕржмрж╕рзНржерж╛рж░ ржЬржирзНржп ржЖржорж╛рж░ ржХрждржЯрж╛ рж╕ржЮрзНржЪржпрж╝ ржХрж░рж╛ ржЙржЪрж┐ржд?",
    category: "рж╕ржЮрзНржЪржпрж╝"
  },
  {
    icon: <TrendingUp className="w-5 h-5" />,
    text: "ржмрж┐ржирж┐ржпрж╝рзЛржЧ рж╢рзБрж░рзБ ржХрж░рж╛рж░ рж╕рж░рзНржмрзЛрждрзНрждржо ржЙржкрж╛ржпрж╝ ржХрзА?",
    category: "ржмрж┐ржирж┐ржпрж╝рзЛржЧ"
  },
  {
    icon: <CreditCard className="w-5 h-5" />,
    text: "ржЖржорж┐ ржХрзАржнрж╛ржмрзЗ ржЖржорж╛рж░ ржХрзНрж░рзЗржбрж┐ржЯ рж╕рзНржХрзЛрж░ ржЙржирзНржиржд ржХрж░рждрзЗ ржкрж╛рж░рж┐?",
    category: "ржХрзНрж░рзЗржбрж┐ржЯ"
  },
  {
    icon: <Target className="w-5 h-5" />,
    text: "ржЖржорж┐ ржХрзАржнрж╛ржмрзЗ ржЖрж░рзНржерж┐ржХ рж▓ржХрзНрж╖рзНржп ржирж┐рж░рзНржзрж╛рж░ржг ржХрж░ржм?",
    category: "рж▓ржХрзНрж╖рзНржп ржирж┐рж░рзНржзрж╛рж░ржг"
  },
  {
    icon: <MessageCircle className="w-5 h-5" />,
    text: "ржЛржг ржкрж░рж┐рж╢рзЛржз ржХрж░рж╛рж░ рж╕рж░рзНржмрзЛрждрзНрждржо ржЙржкрж╛ржпрж╝ ржХрзА?",
    category: "ржЛржг ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛"
  },
  {
    icon: <Shield className="w-5 h-5" />,
    text: "ржЖржорж╛рж░ ржХрзА ржмрзАржорж╛ рж╕рждрзНржпрж┐ржЗ ржкрзНрж░ржпрж╝рзЛржЬржи?",
    category: "ржмрзАржорж╛"
  },
  {
    icon: <Home className="w-5 h-5" />,
    text: "ржбрж╛ржЙржи ржкрзЗржорзЗржирзНржЯрзЗрж░ ржЬржирзНржп ржЖржорж╛рж░ ржХрждржЯрж╛ рж╕ржЮрзНржЪржпрж╝ ржХрж░рж╛ ржЙржЪрж┐ржд?",
    category: "ржмрж╛ржбрж╝рж┐ ржХрзЗржирж╛"
  },
  {
    icon: <Car className="w-5 h-5" />,
    text: "ржЖржорж┐ ржЧрж╛ржбрж╝рж┐ ржХрж┐ржиржм ржирж╛ржХрж┐ рж▓рж┐ржЬ ржХрж░ржм?",
    category: "ржЧрж╛ржбрж╝рж┐рж░ ржЕрж░рзНрже"
  },
  {
    icon: <GraduationCap className="w-5 h-5" />,
    text: "ржЖржорж┐ ржХрзАржнрж╛ржмрзЗ ржЖржорж╛рж░ рж╕ржирзНрждрж╛ржирзЗрж░ рж╢рж┐ржХрзНрж╖рж╛рж░ ржЬржирзНржп рж╕ржЮрзНржЪржпрж╝ ржХрж░ржм?",
    category: "рж╢рж┐ржХрзНрж╖рж╛ ржкрж░рж┐ржХрж▓рзНржкржирж╛"
  },
  {
    icon: <Heart className="w-5 h-5" />,
    text: "ржЖржорж┐ ржХрзАржнрж╛ржмрзЗ ржЖржорж╛рж░ рж╕ржЩрзНржЧрзАрж░ рж╕рж╛ржерзЗ ржЯрж╛ржХрж╛рж░ ржмрж┐рж╖ржпрж╝рзЗ ржХржерж╛ ржмрж▓ржм?",
    category: "рж╕ржорзНржкрж░рзНржХ"
  },
  {
    icon: <Plane className="w-5 h-5" />,
    text: "ржЖржорж┐ ржХрзАржнрж╛ржмрзЗ ржХржо ржЦрж░ржЪрзЗ ржнрзНрж░ржоржг ржХрж░рждрзЗ ржкрж╛рж░рж┐?",
    category: "ржЬрзАржмржиржзрж╛рж░рж╛"
  }
];

interface ChatDemoProps {
  onQuestionClick: (question: string) => void;
}

export function ChatDemo({ onQuestionClick }: ChatDemoProps) {
  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);

  const categories = Array.from(new Set(sampleQuestions.map(q => q.category)));

  const filteredQuestions = selectedCategory 
    ? sampleQuestions.filter(q => q.category === selectedCategory)
    : sampleQuestions;

  return (
    <div className="bg-[rgb(25,45,54)] border border-[rgb(87,204,2)]/20 rounded-lg p-6">
      <div className="text-center mb-6">
        <h3 className="text-xl font-semibold text-[rgb(87,204,2)] mb-2">
          ЁЯТб ржжрзНрж░рзБржд рж╢рзБрж░рзБ ржкрзНрж░рж╢рзНржи
        </h3>
        <p className="text-gray-400">
          ржирзАржЪрзЗрж░ ржпрзЗржХрзЛржирзЛ ржкрзНрж░рж╢рзНржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзЗ ржЖржкржирж╛рж░ AI ржЖрж░рзНржерж┐ржХ ржХрзЛржЪрзЗрж░ рж╕рж╛ржерзЗ ржХржерзЛржкржХржержи рж╢рзБрж░рзБ ржХрж░рзБржи
        </p>
      </div>

      {/* Category Filter */}
      <div className="flex flex-wrap gap-2 mb-6 justify-center">
        <button
          onClick={() => setSelectedCategory(null)}
          className={`px-3 py-1 rounded-full text-sm font-medium transition-colors ${
            selectedCategory === null
              ? 'bg-[rgb(87,204,2)] text-[rgb(25,45,54)]'
              : 'bg-gray-700 text-gray-300 hover:bg-gray-600'
          }`}
        >
          рж╕ржм ржмрж┐рж╖ржпрж╝
        </button>
        {categories.map((category) => (
          <button
            key={category}
            onClick={() => setSelectedCategory(category)}
            className={`px-3 py-1 rounded-full text-sm font-medium transition-colors ${
              selectedCategory === category
                ? 'bg-[rgb(87,204,2)] text-[rgb(25,45,54)]'
                : 'bg-gray-700 text-gray-300 hover:bg-gray-600'
            }`}
          >
            {category}
          </button>
        ))}
      </div>

      {/* Sample Questions Grid */}
      <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-3">
        {filteredQuestions.map((question, index) => (
          <button
            key={index}
            onClick={() => onQuestionClick(question.text)}
            className="flex items-start gap-3 p-3 bg-gray-700 hover:bg-gray-600 rounded-lg text-left transition-colors group"
          >
            <div className="text-[rgb(87,204,2)] group-hover:scale-110 transition-transform">
              {question.icon}
            </div>
            <div className="flex-1">
              <p className="text-gray-200 font-medium text-sm leading-relaxed">
                {question.text}
              </p>
              <span className="text-xs text-gray-500 mt-1 block">
                {question.category}
              </span>
            </div>
          </button>
        ))}
      </div>

      <div className="mt-6 text-center">
        <p className="text-sm text-gray-400 mb-3">
          ржЕржержмрж╛ ржирзАржЪрзЗрж░ ржЪрзНржпрж╛ржЯрзЗ ржЖржкржирж╛рж░ ржирж┐ржЬрзЗрж░ ржкрзНрж░рж╢рзНржи ржЯрж╛ржЗржк ржХрж░рзБржи
        </p>
        <div className="flex items-center justify-center gap-2 text-[rgb(87,204,2)]">
          <div className="w-2 h-2 bg-[rgb(87,204,2)] rounded-full animate-pulse"></div>
          <span className="text-sm">AI ржЖрж░рзНржерж┐ржХ ржХрзЛржЪ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рждрзЗ ржкрзНрж░рж╕рзНрждрзБржд!</span>
          <div className="w-2 h-2 bg-[rgb(87,204,2)] rounded-full animate-pulse"></div>
        </div>
      </div>
    </div>
  );
}
